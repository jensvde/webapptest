@model ResponseModel
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.responseChartItems.Select(x => x.Name).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.responseChartItems.Select(x => x.Result).ToList());
    ViewData["Title"] = "Antwoorden";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Antwoorden</title>
</head>
<body>
    <div class="box-body">
        <h1>De ideale mix,, naar het gemiddelde van @Model.TotalSubmissions inzendingen</h1>
        <br />
        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px"></canvas>
        </div>
        <h2>Concreet</h2>
        @{
            string toType = "";
            foreach (ResponseChartItem item in Model.responseChartItems)
            {
                if (Model.responseChartItems.Last() != item && Model.responseChartItems.First() != item && Model.responseChartItems[Model.responseChartItems.Count - 1] != item)
                {
                    toType += ", ";
                }
                if (Model.responseChartItems[Model.responseChartItems.Count - 1] == item)
                {
                    toType += " en ";
                }
                toType += item.Result + "% " + item.Name.ToLower() + "-verkeer";
                if (Model.responseChartItems.Last() == item)
                {
                    toType += ".";
                }
            }
            <p>Uit de resultaten van de quiz blijkt dat de ideale verkeersmix voor Zaventem bestaat uit @toType In totaal verwerkten we @Model.TotalSubmissions inzendingen.</p>
        }
    </div>
</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script>

<script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Departments Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
    tooltips: {
        enabled: true
    },
    plugins: {
        datalabels: {
            formatter: (value, ctx) => {

                let sum = ctx.dataset._meta[0].total;
                let percentage = (value * 100 / sum).toFixed(0) + "%";
                return percentage;
            },
            color: '#000000',
        }
    }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'pie'

            });
        });
</script>
